import{_ as i,o as t,c as a,O as e}from"./chunks/framework.3d6e08ae.js";const h=JSON.parse('{"title":"作用域链","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/JavaScript/作用域链.md","filePath":"Interview/JingJiang/JavaScript/作用域链.md"}'),l={name:"Interview/JingJiang/JavaScript/作用域链.md"},n=e('<h1 id="作用域链" tabindex="-1">作用域链 <a class="header-anchor" href="#作用域链" aria-label="Permalink to &quot;作用域链&quot;">​</a></h1><ul><li><p>是什么：程序查找变量的一个过程，（它是真实存在的（不是抽象的）），本质是一个各个执行上下文的变量对象组成的数组</p></li><li><p>为什么：程序用来找变量用的，可以保证对 执行环境有权访问的所有变量和函数 的有序访问</p></li><li><p>作用域链是在函数定义的时候就已经产生了，但是并不完整, 因为当前函数没有调用，所以当前函数的变量对象还没有产生</p></li><li><p>当函数调用的时候，会创建当前上下文的变量对象，然后添加在已经生成的作用域链的开始位置，构成完整的作用域链</p></li><li><p>作用域链的开始位置一定是当前的执行环境的变量对象，结束位置一定是window</p></li><li><p>变量的解析是沿着作用域链搜索的过程，直到寻找到位置，如果一直找不到，则报错</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>作用域是虚拟的，代码写完或者函数定义完成即行 ​- 作用域链是函数调用的时候才形成</li></ul></div>',3),o=[n];function _(c,r,p,s,d,u){return t(),a("div",null,o)}const v=i(l,[["render",_]]);export{h as __pageData,v as default};
