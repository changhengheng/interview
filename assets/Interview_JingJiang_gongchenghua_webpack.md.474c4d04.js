import{_ as e,o as l,c as i,U as a}from"./chunks/framework.e0394e94.js";const k=JSON.parse('{"title":"webpack","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/gongchenghua/webpack.md","filePath":"Interview/JingJiang/gongchenghua/webpack.md","lastUpdated":1689495355000}'),o={name:"Interview/JingJiang/gongchenghua/webpack.md"},c=a('<h1 id="webpack" tabindex="-1">webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to &quot;webpack&quot;">​</a></h1><p>webpack 是一个JavaScript 应用程序的静态模块打包工具，可以将静态模块编译、打包和输出成一个或多个文件（bundles）。</p><ul><li><p>Entry：入口起点(entry point)指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。</p></li><li><p>Output：output 属性告诉 webpack 在哪里输出它所创建的 bundles，以及如何命名这些文件，默认值为 ./dist。</p></li><li><p>Loader：loader 让 webpack 能够去处理那些非 JavaScript 文件（webpack 自身只能解析 JavaScript Json）。</p></li><li><p>Plugins：插件则可以用于执行范围更广的任务。插件的范围包括，打包优化、压缩、定义环境变量等。</p></li><li><p>Mode：模式，有生产模式 production 和开发模式 development</p></li><li><p>Loader</p><ol><li>处理样式资源 <ul><li><code>style-loader</code> 动态创建一个 Style 标签，里面放置 Webpack 中 CSS 模块内容</li><li><code>css-loader</code> 负责将 CSS 文件编译成 Webpack 能识别的模块</li><li><code>less-loader</code> 将 Less 文件编译成 CSS 文件</li><li><code>sass-loader</code> 将 Sass 文件编译成 CSS 文件</li><li><code>stylus-loader</code> 将 Stylus 文件编译成 CSS 文件</li><li><code>postcss-loader</code> 根据要求增加 CSS 的前缀(css 代码兼容性处理)</li></ul></li><li>处理 js 资源 <ul><li><code>babel-loader</code> 将 ES6 转化为 ES5(js 代码兼容性处理)</li><li><code>eslint-loader</code> 过去用来进行 js 代码语法检查，最新 Webpack5 改用插件实现：eslint-webpack-plugin</li></ul></li><li>加载其他资源 <ul><li><code>file-loader</code> 过去用来转化图片、字体图标等资源，现在 Webpack5 内置了</li><li><code>url-loader</code> 过去用来转化图片等资源，现在 Webpack5 内置了</li><li><code>vue-loader</code> 用来编译 Vue 单文件组件</li></ul></li></ol></li><li><p>Plugin</p><ol><li><code>html-webpack-plugin</code> 简化创建 HTML 文件，配模板，最终创建index.html并自动引入打包的js</li><li><code>eslint-webpack-plugin</code> 用来进行 js 代码语法检查</li></ol></li></ul>',3),d=[c];function t(p,s,n,r,u,b){return l(),i("div",null,d)}const S=e(o,[["render",t]]);export{k as __pageData,S as default};
