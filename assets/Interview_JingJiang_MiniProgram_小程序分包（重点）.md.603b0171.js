import{_ as a,o as e,c as i,O as t}from"./chunks/framework.3d6e08ae.js";const m=JSON.parse('{"title":"原题","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/MiniProgram/小程序分包（重点）.md","filePath":"Interview/JingJiang/MiniProgram/小程序分包（重点）.md"}'),l={name:"Interview/JingJiang/MiniProgram/小程序分包（重点）.md"},o=t('<h1 id="原题" tabindex="-1">原题 <a class="header-anchor" href="#原题" aria-label="Permalink to &quot;原题&quot;">​</a></h1><p>什么是分包？</p><p>一般来说，小程序打包的体积不允许大于2M，但是实际项目可能大于2M，此时可以使用分包功能将小程序划分成一个主包和多个不同的子包，用户在使用时按需进行加载。</p><p>限制：分包总体大小不能超过20M，单个分包不能超过2M</p><h2 id="常规分包-使用分包" tabindex="-1">常规分包（使用分包） <a class="header-anchor" href="#常规分包-使用分包" aria-label="Permalink to &quot;常规分包（使用分包）&quot;">​</a></h2><p>特点：</p><ol><li>分包以外的目录都是主包的内容</li><li>分包不能嵌套（分包里面不能有其他分包）</li><li>tabBar页面不能分包，只能在主包</li><li>packageA 无法使用 packageB 的资源，但可以使用主包、packageA 内的资源</li><li>小程序启动时默认会先下载主包内页面，当进入分包内某个页面时，才会下载对应的分包</li></ol><p>操作：</p><p>在 app.json subpackages 字段声明项目分包结构：</p><ul><li>root：分包根目录-所有在这个分包里的分包页面所在的根目录</li><li>name：分包别名，分包预下载时可以使用</li><li>pages：相对于分包根目录的分包页面的路径</li></ul><p>****分包完成要注意点击一遍，把错误路径给修改过来</p><h2 id="独立分包" tabindex="-1">独立分包 <a class="header-anchor" href="#独立分包" aria-label="Permalink to &quot;独立分包&quot;">​</a></h2><p>定义：一种可以独立于主包和其他分包运行的分包，进入独立分包时不需要下载主包</p><p>在 app.json subpackages 字段里、独立分包的基础上，添加一个字段&quot;independent&quot;: true就变为独立分包</p><p>独立分包特点：</p><ol><li>独立分包不依赖主包即可运行，可以很大程度上提升分包页面的启动速度。</li><li>独立分包中不能依赖主包和其他分包中的内容，包括 js 文件、template、wxss、自定义组件、插件等，其余的自己定义的目录当中的资源是可以使用的</li><li>独立分包也是一种分包，常规分包的限制对它依然有效</li></ol><h2 id="分包预下载" tabindex="-1">分包预下载 <a class="header-anchor" href="#分包预下载" aria-label="Permalink to &quot;分包预下载&quot;">​</a></h2><p>定义：开发者可以通过配置，在进入小程序某个页面时，由框架自动预下载可能需要的分包，提升进入后续分包页面时的启动速度。对于独立分包，也可以预下载主包。</p><p>分包预下载特点</p><ul><li>同一个分包中的页面享有共同的预下载大小限额 2M，限额会在工具中打包时校验。如，页面 A 和 B 都在同一个分包中，A 中预下载总大小 0.5M 的分包，B中最多只能预下载总大小 1.5M 的分包。</li></ul><p>操作：通过配置完成，查官网即可</p>',21),r=[o];function p(n,s,_,c,d,h){return e(),i("div",null,r)}const g=a(l,[["render",p]]);export{m as __pageData,g as default};
