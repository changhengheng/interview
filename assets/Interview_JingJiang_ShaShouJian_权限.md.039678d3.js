import{_ as a,o as e,c as i,O as l}from"./chunks/framework.3d6e08ae.js";const m=JSON.parse('{"title":"权限","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/ShaShouJian/权限.md","filePath":"Interview/JingJiang/ShaShouJian/权限.md"}'),t={name:"Interview/JingJiang/ShaShouJian/权限.md"},o=l('<h1 id="权限" tabindex="-1">权限 <a class="header-anchor" href="#权限" aria-label="Permalink to &quot;权限&quot;">​</a></h1><p>数据有用户、角色和菜单：</p><ul><li>多对多关系，用户有多个角色，角色有多个用户；角色有多个菜单，菜单有多个角色；</li><li>从属关系：角色只能设置给用户，菜单只能设置给菜单；</li></ul><p>权限控制：分前端控制和后端控制</p><h2 id="先说前端控制" tabindex="-1">先说前端控制： <a class="header-anchor" href="#先说前端控制" aria-label="Permalink to &quot;先说前端控制：&quot;">​</a></h2><p>菜单权限控制</p><ol><li>目的是让不同的用户登录后看到不同的菜单</li><li>菜单是遍历路由产生的，菜单不同，代表不同用户的路由不一样</li><li>路由是用户信息数据遍历产生的</li></ol><p>拆分路由（为什么）：不做权限控制的时候，所有的路由都放在一个路由数组里面，叫静态路由、常量路由，任何用户看到的路由就是一样的，想要做权限控制，就不能用一个路由去控制了，就需要拆分三大路由：</p><ul><li>静态路由：所有用户都能看到的路由</li><li>动态路由、异步路由：根据用户信息数据筛选出来的用户具有权限的路由</li><li>任意路由：404，必须放最后</li></ul><p>怎么做：</p><ul><li>登录后跳到全局前置守卫里获取用户信息（维护用户信息流程），获取到用户信息之后，从用户的权限信息数据中获取到自己的动态路由（异步路由）</li><li>通过addRoute、addRoutes将过滤出来的自己的异步路由动态的添加到路由器当中（做这一步知识实现了点击可以跳转，但菜单还没有）</li></ul><p>所以，最后还要把静态路由、用户自己的动态路由、任意路由合并到一个数组里面（实现菜单显示），让菜单展示时遍历这个数组</p><p>按钮权限控制：</p><p>自定义插件添加一个自定义指令v-has，在每个按钮身上使用，值是每个按钮对应的权限信息数据，v-has会判断这个值在不在用户返回的按钮权限信息数组里，如果在就显示，不再就不显示</p><h2 id="后端控制" tabindex="-1">后端控制 <a class="header-anchor" href="#后端控制" aria-label="Permalink to &quot;后端控制&quot;">​</a></h2><p>前台返回的用户信息数据是字符串数组，后台控制意思是说由后台返回动态路由</p><p>后台返回的是真真正正的路由数组，后期拆分路由只需要拆成两部分即可：静态和任意，动态由后端控制；</p><p>前台处理动态路由：需要递归遍历返回的动态路由生成懒加载的前台路由</p><p>动态添加路由：通过addRoute、addRoutes将生成的懒加载的异步路由、拆分的静态和任意路由动态的添加到路由器当中</p><h2 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-label="Permalink to &quot;区别&quot;">​</a></h2><p>前台控制，路由是自己写在路由器里的；后台控制，动态路由是后台返回给前端的，缺点是返回的component的值是路由的地址，需要自己转化成懒加载的路由组件，变成真正的前端路由，最终才添加到路由器的；</p><p>区别：</p><ol><li>前台返回的是字符串数组，后台返回的是路由数组</li><li>前台拆分三大路由，后台拆分两大路由</li></ol><p>后台控制更好一点：</p><hr><p>复习今天学的</p>',26),n=[o];function p(r,h,d,s,_,c){return e(),i("div",null,n)}const f=a(t,[["render",p]]);export{m as __pageData,f as default};
