import{_ as a,o as e,c as o,O as s}from"./chunks/framework.3d6e08ae.js";const _=JSON.parse('{"title":"localStorage 和 sessionStorage","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/自己补充的/localStorage和sessionStorage.md","filePath":"Interview/JingJiang/自己补充的/localStorage和sessionStorage.md"}'),t={name:"Interview/JingJiang/自己补充的/localStorage和sessionStorage.md"},n=s(`<h1 id="localstorage-和-sessionstorage" tabindex="-1">localStorage 和 sessionStorage <a class="header-anchor" href="#localstorage-和-sessionstorage" aria-label="Permalink to &quot;localStorage 和 sessionStorage&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>localStorage和sessionStorage 是h5新增的一种本地存储数据方式，本质是一个小型数据库，可以在前端使用对象去操作。存储量大小是5M（最新版谷歌浏览器是10M）</p><p>localStorage保存数据是永久保存，关闭浏览器或者刷新浏览器，数据还在 sessionStorage 不是永久保存，会话存储。关闭浏览器数据清空</p><h4 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h4><p>存储： localStorage.setItem(键，值) 增 获取： localStorage.getItem(键) 查 能获取到就获取到，获取不到返回null 删除： localStorage.removeItem(键) 删除某个键值对 改和增一样，第一次就是增后面就是改 清空： localStorage.clear()</p><h5 id="对象类型转字符串的规则" tabindex="-1">对象类型转字符串的规则 <a class="header-anchor" href="#对象类型转字符串的规则" aria-label="Permalink to &quot;对象类型转字符串的规则&quot;">​</a></h5><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">对象	{}     【object  Object】</span></span>
<span class="line"><span style="color:#A6ACCD;">函数	function(){}   &#39;function(){}&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">数组	[1,2,3]        &#39;1,2,3&#39;</span></span></code></pre></div><h4 id="坑" tabindex="-1">坑 <a class="header-anchor" href="#坑" aria-label="Permalink to &quot;坑&quot;">​</a></h4><p>这两个东西存储数据，默认数据都会转化为字符串,以后存储基本数据都是直接加引号变为字符串 存储对象数据，数据就变了后期取出来就不是我们要的东西了 因此在存储对象数据的时候，一定要自己强制转化为json串。这样它就不会再改变我的数据了</p><h4 id="json对象的方法" tabindex="-1">Json对象的方法 <a class="header-anchor" href="#json对象的方法" aria-label="Permalink to &quot;Json对象的方法&quot;">​</a></h4><p>JSON.stringify(val)，用于将js对象转换为 JSON 字符串</p><p>JSON.parse(val)，用于将JSON字符串转为一个对象</p>`,13),l=[n];function r(i,c,p,h,g,d){return e(),o("div",null,l)}const u=a(t,[["render",r]]);export{_ as __pageData,u as default};
