import{_ as e,o as t,c as i,O as l}from"./chunks/framework.3d6e08ae.js";const g=JSON.parse('{"title":"圣杯布局","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/自己补充的/圣杯布局.md","filePath":"Interview/JingJiang/自己补充的/圣杯布局.md"}'),n={name:"Interview/JingJiang/自己补充的/圣杯布局.md"},r=l('<h1 id="圣杯布局" tabindex="-1">圣杯布局 <a class="header-anchor" href="#圣杯布局" aria-label="Permalink to &quot;圣杯布局&quot;">​</a></h1><p>圣杯布局是等高三列布局的变体，现在用flex非常方便，所以基本不用圣杯布局</p><p>两个底线：</p><ul><li>不能用定位，因为定位不能等高，因为定位脱离文档流了，在页面内的元素无法知道它的高度</li><li>保证center优先加载</li></ul><p>两大步：</p><ol><li>先做三列：左右固定，中间自适应</li><li>再做等高：</li></ol><p>第一步：</p><ol><li>三个子元素都开浮动</li><li>outer设置左右margin留位置，center设置宽度100%，除了margin剩余的都给content</li><li>因为浮动，左右margin，且center宽度占内容区100%，left和right都排列在center内容区下方，此时使用-margin将left移动到center内容区开始的位置，移动内容区100%的宽度（+自身宽度，使用calc，或者使用下面的相对定位），再用相对定位移动left自身宽度100%</li><li>right用相同的办法处理，先-margin自身宽度，再定位挪到右边outer预留的位置</li><li>做等高处理，再给outer套一个盒子，设over-flowhidden（不然左右超出隐藏了）</li></ol>',8),a=[r];function o(_,c,s,p,d,m){return t(),i("div",null,a)}const h=e(n,[["render",o]]);export{g as __pageData,h as default};
