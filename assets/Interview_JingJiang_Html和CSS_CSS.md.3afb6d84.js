import{_ as s,o as a,c as l,U as n}from"./chunks/framework.e0394e94.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/Html和CSS/CSS.md","filePath":"Interview/JingJiang/Html和CSS/CSS.md","lastUpdated":null}'),o={name:"Interview/JingJiang/Html和CSS/CSS.md"},p=n(`<h2 id="_1-css3-新特性" tabindex="-1">1. CSS3 新特性 <a class="header-anchor" href="#_1-css3-新特性" aria-label="Permalink to &quot;1. CSS3 新特性&quot;">​</a></h2><ol><li>新增了选择器</li></ol><ul><li><code>:last-child</code> 匹配父元素的最后一个子元素</li><li><code>:nth-child(n)</code> 匹配父元素的第 n 个子元素</li></ul><ol start="2"><li>边框特性</li></ol><ul><li><code>border-radius</code> 圆角</li></ul><ol start="3"><li>颜色与不透明度</li></ol><ul><li><code>opacity: 0.5;</code></li><li><code>color: rgba(0, 0, 0, 0.5)</code></li></ul><ol start="4"><li>阴影</li></ol><ul><li><code>text-shadow</code> 文字阴影</li><li><code>box-shadow</code> 盒子阴影</li></ul><ol start="5"><li>transform 变形</li></ol><ul><li><code>transform: rotate(9deg)</code> 旋转</li><li><code>transform: scale(0.5)</code> 缩放</li><li><code>transform: translate(100px, 100px)</code> 位移</li></ul><ol start="6"><li>过渡与动画</li></ol><ul><li><code>transition</code> 过渡</li><li><code>animation</code> 动画</li></ul><ol start="7"><li>媒体查询</li></ol><ul><li><code>@media</code> 用来做响应式布局</li></ul><h2 id="_2-盒模型" tabindex="-1">2. 盒模型 <a class="header-anchor" href="#_2-盒模型" aria-label="Permalink to &quot;2. 盒模型&quot;">​</a></h2><h3 id="_1-概念" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h3><p><strong>页面渲染时，DOM 元素所采用的布局模型。</strong> 可通过 box-sizing 进行设置。</p><h3 id="_2-分类" tabindex="-1">2. 分类 <a class="header-anchor" href="#_2-分类" aria-label="Permalink to &quot;2. 分类&quot;">​</a></h3><p>根据计算宽高的区域可分为：</p><ol><li>content-box (W3C 标准盒模型)</li></ol><p>当给元素设置 width 和 height 时，只会改变 width + height。</p><ol start="2"><li>border-box (IE 盒模型)</li></ol><p>当给元素设置 width 和 height 时，会改变 width + height + padding+border。</p><ol start="3"><li>padding-box (浏览器未实现)</li><li>margin-box (浏览器未实现)</li></ol><h2 id="_3-bfc" tabindex="-1">3. BFC <a class="header-anchor" href="#_3-bfc" aria-label="Permalink to &quot;3. BFC&quot;">​</a></h2><h3 id="_1-概念-1" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念-1" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h3><p>BFC，又称为块级格式化上下文，指的是：<strong>一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。</strong></p><h3 id="_2-触发条件-开启-bfc" tabindex="-1">2. 触发条件（开启 BFC） <a class="header-anchor" href="#_2-触发条件-开启-bfc" aria-label="Permalink to &quot;2. 触发条件（开启 BFC）&quot;">​</a></h3><ul><li>设置浮动，不包括 none</li><li>设置定位，absolute 或者 fixed</li><li>行内块显示模式，inline-block</li><li>设置 overflow，即 hidden，auto，scroll</li><li>表格单元格，table-cell</li></ul><h3 id="_3-具体规则" tabindex="-1">3. 具体规则 <a class="header-anchor" href="#_3-具体规则" aria-label="Permalink to &quot;3. 具体规则&quot;">​</a></h3><ul><li>BFC 是一个块级元素，块级元素在垂直方向上依次排列。</li><li>BFC 是一个独立的容器，内部元素不会影响容器外部的元素。</li><li>属于同一个 BFC 的两个盒子，外边距 margin 会发生重叠，并且取最大外边距。</li><li>计算 BFC 高度时，浮动子元素也要参与计算。</li></ul><h3 id="_4-应用" tabindex="-1">4. 应用 <a class="header-anchor" href="#_4-应用" aria-label="Permalink to &quot;4. 应用&quot;">​</a></h3><ul><li>阻止 margin 重叠,给盒子开启bfc <ul><li>父子盒子 给父盒子开启bfc，或者让儿子处在bfc当中</li><li>兄弟盒子 让兄弟盒子各自处在bfc当中</li></ul></li><li>清除浮动，给父元素开启bfc,防止高度塌陷，因为计算 BFC 高度时，浮动子元素也要参与计算。</li><li>给标准流元素开启bfc阻止标准流元素被浮动元素覆盖</li></ul><h3 id="_4-选择器权重-优先级" tabindex="-1">4. 选择器权重&amp;优先级 <a class="header-anchor" href="#_4-选择器权重-优先级" aria-label="Permalink to &quot;4. 选择器权重&amp;优先级&quot;">​</a></h3><ul><li><code>!important</code> &gt; <code>行内样式</code> &gt; <code>#id</code> &gt; <code>.class</code> &gt; <code>tag</code> &gt; <code>*</code> &gt; <code>继承</code> &gt; <code>默认</code></li></ul><h2 id="_5-css-预处理器-sass-less-stylus" tabindex="-1">5. CSS 预处理器(Sass/Less/Stylus) <a class="header-anchor" href="#_5-css-预处理器-sass-less-stylus" aria-label="Permalink to &quot;5. CSS 预处理器(Sass/Less/Stylus)&quot;">​</a></h2><h3 id="_1-概念-2" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念-2" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h3><ul><li>CSS 预处理器定义了一种新的语言，主要是通过用一种专门的编程语言，为 CSS 添加一些编程特性，再编译生成 CSS 文件。</li><li>它可以帮助我们编写可维护的、与时俱进的代码，也可以减少需要编写的 CSS 数量，对于那些需要大量样式表和样式规则的大型用户界面是非常有帮助的。</li><li>CSS 预处理器可以更方便的维护和管理 CSS 代码，让整个网页变得更加灵活可变。</li><li>scss和sass其实一样 写法有些区别 sass类似stylus的简写 scss不能简写</li><li>CSS 选择器浏览器是 <strong>从右往左</strong> 依次解析 ，所以不建议嵌套写，要嵌套的时候层次少一点</li></ul><h3 id="_2-功能" tabindex="-1">2. 功能 <a class="header-anchor" href="#_2-功能" aria-label="Permalink to &quot;2. 功能&quot;">​</a></h3><ul><li><p>两种scss的用法 scss和sass sass类似stylus的简写 scss和less一样</p></li><li><p>可以使用变量、常量。可以定义一些公共的scss变量，通过配置（参考vite官网）在整个项目当中直接使用</p><p>注意.sass和.scss的后缀配置的时候语法上有区别，分号要处理好</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$</span><span style="color:#FFCB6B;">primary-color</span><span style="color:#A6ACCD;">: pink;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">title</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $primary-color</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>允许 css 代码嵌套</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">parent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  .child {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><ul><li>混入 Mixin（复用样式）</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 定义混合 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@mixin</span><span style="color:#A6ACCD;"> clearfix </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &amp;</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">visibility</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 使用混合 */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  @include clearfix</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">定义的混合可以带变量， 类似函数</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@mixin</span><span style="color:#A6ACCD;"> addColor($a, $b) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">border-</span><span style="color:#A6ACCD;">#</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">$a</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">: 1px solid $b;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">使用的时候可以传递参数</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@include</span><span style="color:#A6ACCD;"> addColor(bottom, green)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>继承</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">border</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid pink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  @extend .</span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_6-flex-布局" tabindex="-1">6. flex 布局 <a class="header-anchor" href="#_6-flex-布局" aria-label="Permalink to &quot;6. flex 布局&quot;">​</a></h2><h3 id="_1-概念-3" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念-3" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h3><p>Flex 是 Flexible Box 的缩写，意为**&quot;弹性布局&quot;**，用来为盒状模型提供最大的灵活性。采用 Flex 布局的元素，称为 Flex 容器（flex container），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称&quot;项目&quot;。容器默认存在两根轴：主轴和交叉轴（也叫做侧轴）。默认水平方向的为主轴，垂直方向为侧轴。</p><h3 id="_2-容器的属性" tabindex="-1">2. 容器的属性 <a class="header-anchor" href="#_2-容器的属性" aria-label="Permalink to &quot;2. 容器的属性&quot;">​</a></h3><ul><li><code>flex-direction</code> 定义主轴的方向</li><li><code>flex-wrap</code> 定义是否换行</li><li><code>flex-flow</code> 是 flex-direction 属性和 flex-wrap 属性的简写形式</li><li><code>justify-content</code> 定义项目在主轴上的对齐方式</li><li><code>align-items</code> 定义项目在侧轴上的对齐方式</li><li><code>align-content</code> 定义换行的项目在侧轴上如何对齐</li></ul><h3 id="_3-项目的属性" tabindex="-1">3. 项目的属性 <a class="header-anchor" href="#_3-项目的属性" aria-label="Permalink to &quot;3. 项目的属性&quot;">​</a></h3><ul><li><code>order</code> 定义项目的排列顺序。数值越小，排列越靠前，默认为 0。</li><li><code>flex-grow</code> 定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。</li><li><code>flex-shrink</code> 定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。</li><li><code>flex-basis</code> 定义了在分配多余空间之前，项目占据的主轴空间。它的默认值为 auto，即项目的本来大小。</li><li><code>flex</code> 是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。</li><li><code>align-self</code> 允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。 扩展：flex: 1 代表什么含义？</li><li><code>flex-grow: 1</code>  如果存在剩余空间, 该项目会放大。</li><li><code>flex-shrink: 1</code>  如果剩余空间不足，该项目会缩小。</li><li><code>flex-basis: 0%</code>  设置为 0% 之后，即不占据主轴空间，但是因为有 flex-grow 和 flex-shrink 的设置，该项目会自动放大或缩小。</li></ul><h2 id="_7-实现两栏布局-左侧固定-右侧自适应布局" tabindex="-1">7. 实现两栏布局（左侧固定 + 右侧自适应布局） <a class="header-anchor" href="#_7-实现两栏布局-左侧固定-右侧自适应布局" aria-label="Permalink to &quot;7. 实现两栏布局（左侧固定 + 右侧自适应布局）&quot;">​</a></h2><ol><li>现有以下 DOM 结构</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">左侧</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">右侧</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ol start="2"><li>采用 flex 实现</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">left</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">right</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> deeppink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ol start="3"><li>采用 float 实现</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">left</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> left</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">right</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> deeppink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_8-隐藏页面元素方式" tabindex="-1">8. 隐藏页面元素方式 <a class="header-anchor" href="#_8-隐藏页面元素方式" aria-label="Permalink to &quot;8. 隐藏页面元素方式&quot;">​</a></h2><ol><li><code>display: none</code> 不占位。不会响应 DOM 事件。</li><li><code>opacity: 0</code> 占位，但不可见。会响应 DOM 事件。</li><li><code>visibility: hidden</code> 占位，但不可见。不会响应 DOM 事件。</li><li><code>position: absolute; left: -10000px</code> 移动到屏幕外</li><li><code>z-index: -1</code> 将别的定位元素遮盖掉当前元素</li></ol><h2 id="_9-让元素水平垂直居中方式" tabindex="-1">9. 让元素水平垂直居中方式 <a class="header-anchor" href="#_9-让元素水平垂直居中方式" aria-label="Permalink to &quot;9. 让元素水平垂直居中方式&quot;">​</a></h2><ol><li>利用绝对定位, 子元素未知宽高</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ol start="2"><li>利用绝对定位, 子元素必须明确宽高</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ol start="3"><li>利用 flex</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,71),e=[p];function t(c,r,i,D,C,y){return a(),l("div",null,e)}const A=s(o,[["render",t]]);export{d as __pageData,A as default};
