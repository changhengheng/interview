import{_ as e,o as i,c as t,U as a}from"./chunks/framework.e0394e94.js";const J=JSON.parse('{"title":"TS和JS的区别","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/TypeScript/TS和JS的区别.md","filePath":"Interview/JingJiang/TypeScript/TS和JS的区别.md","lastUpdated":1689411224000}'),r={name:"Interview/JingJiang/TypeScript/TS和JS的区别.md"},c=a('<h1 id="ts和js的区别" tabindex="-1">TS和JS的区别 <a class="header-anchor" href="#ts和js的区别" aria-label="Permalink to &quot;TS和JS的区别&quot;">​</a></h1><ol><li>TypeScript 引入了 JavaScript 中没有的“类”概念； <ol><li>public 相当于不写 公共的</li><li>privite 私有的，只有在当前类中可以访问这个属性在，子类和外部无法访问</li><li>protected 受保护的， 只有在当前类和子类中可以访问，在外部无法访问</li></ol></li><li>TypeScript 中引入了模块的概念，可以把声明、数据、函数和类封装在模块中；</li><li>JavaScript 没有重载概念，TypeScript 有可以重载；</li><li>TypeScript 增加了接口interface、泛型、类、类的多态、继承等；</li><li>TypeScript 对比 JavaScript 基础类型上，增加了 void/never/any/元组/枚举/以及一些高级类型。</li></ol>',2),l=[c];function p(n,o,_,S,s,T){return i(),t("div",null,l)}const h=e(r,[["render",p]]);export{J as __pageData,h as default};
