import{_ as e,o as t,c as i,O as o}from"./chunks/framework.3d6e08ae.js";const x=JSON.parse('{"title":"泛型","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/JingJiang/TypeScript/泛型.md","filePath":"Interview/JingJiang/TypeScript/泛型.md"}'),l={name:"Interview/JingJiang/TypeScript/泛型.md"},a=o('<h1 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h1><ol><li>概念</li></ol><p>在接口、类、函数的时候，不预先定义类型，而是在使用时定义类型</p><ol start="2"><li>泛型默认值</li></ol><p><code>&lt;T = string&gt;</code></p><ol start="3"><li>泛型约束</li></ol><p><code>&lt;T extends U&gt;</code></p><ol start="4"><li>泛型工具类型</li></ol><p>Pick（挑选）、Omit（排除）、Partial（可选）、Required（必填）</p><ol start="5"><li>泛型应用</li></ol><ul><li>发送请求封装request函数：<code>request&lt;any, Xxx&gt;(config)</code></li><li>vue3项目中：<code>ref&lt;Xxx&gt;()</code> <code>reactive&lt;Xxx&gt;()</code> defineProps&lt;&gt;()</li><li>react项目中：<code>useState&lt;Xxx&gt;()</code></li></ul>',11),r=[a];function c(n,s,d,_,p,g){return t(),i("div",null,r)}const f=e(l,[["render",c]]);export{x as __pageData,f as default};
